@import url('https://fonts.googleapis.com/css2?family=DM+Sans:wght@400;500;700&family=Inter:wght@300;500&family=Lato:wght@100;300;700&display=swap');

:root{
    --yellow: #ffd602;
    --red: #d5040a;
    --blue: #016db6;
}


body{
    font-family: 'Lato', sans-serif;
    margin: 0;
    overflow: hidden;
}
.page{
    position: relative;
    height: 100vh;
    width: 100%;

}

/* grid layout */
.container{
    position: absolute;
    z-index: 1;
    /* grid */
    display: grid;
    /* two columns */
    grid-template-columns: 55%  45% ;
    grid-template-rows: 20% 50% 30%;
    /* name the aside area */
    grid-template-areas: "nav       aside"
                          "section  aside"
                          "footer   aside";
    height: 100%;
    width: 100%;
}

.navbar{
    
    grid-area: nav;
    display: flex;
    background-color: #ffd602;
    display: flex;
    width: 100%;
}
 
.navbar__content{
    display: flex;
    align-items: center;
    width: 100%;
    padding: 0 0 0 80px;

    animation: 2s   navbar  0.5s  ease-in-out;
}


@keyframes navbar
{
    0% {
        transform: translateY(-200px);
    }
    100%{
        transform: translateY(0px);
    }
}

.navbar__content img{
    width: 50px;
}

.navbar__content ul{
    display: flex;
    /* Space between each element list */
    justify-content: space-evenly;
    list-style: none;
    padding: 0;
    width: 450px;
}
.navbar__content ul li a{
    color: var(--red);
    font-weight: 300;
    text-decoration: none;
}

.main-content{
    /* delimit the grid section for .main-content */
    grid-area: section;
    display: flex;

    /* organize elements one behind another */
    flex-direction: column;

    justify-content: center;
          /* delay */
    animation: 2s main  0.5s  ease-in-out   ;

    padding-left: 80px;
}

.main-content p:first-child{
    font-size: 36px;
    font-weight: 300;
    margin: 0   0   -14px   39px;
}

.main-content h1{
    font-size: 52px;
    font-weight: 700;
    margin: 0   0   20px    0;
}

.main-content p:last-child{
    font-weight: 100;
    margin: 0;
    width: 60%;
}

@keyframes main {
    0%{
        /* It comes from -500px */
        transform: translateY(-500px);
    }

    100%{
        /* finish in his original place */
        transform: translateY(0px);
    }
}


.side-content{

    display: grid;
                    /* 6 is the n.columns, fr= the size */
    grid-template-columns: repeat(6,1fr);
    align-items: center;
    grid-area: aside;
}

.side-content p{
    transform: rotate(-90deg);
    font-size: 36px;

    /* start in line 1 and finish in line 2 */
    grid-row: 1 / 2;
    grid-column: 1/2;

    opacity: 0;
    animation-name: side-content-txt;
    animation-duration: 0.5s;
    animation-delay: 2s;
    animation-timing-function: ease-in-out;
    /* finish in the original place: */
    animation-fill-mode: forwards;
}


@keyframes side-content-txt{
    0%{
        opacity: 0;
    }
    100%{
        opacity: 1;
    }
}

.side-content img{
    width: 100%;
    grid-column: 2/6;
    grid-row: 1/2;

    animation: 2s side-content-img 0.5s  ease-in-out;
}

@keyframes side-content-img {
    0%{
        /* It comes from -1000px */
        transform: translateX(1000px);
    }

    100%{
        /* finish in his original place */
        transform: translateX(0px);
    }

}

.side-content div{
    background-color: var(--yellow);

    grid-column: 4/7;

    grid-row: 1/2;

    height: 100%;
}



.footer{
    /* Align elements inside */
    display: flex;
    justify-content: space-evenly;
    /* Align items from the inferior to the top */
    align-items: flex-end;

    background: var(--yellow);
    /* for top-superior part */
    border-radius: 0 60px 0 0;

    /* applied property to make the section start the animiation
    from outisde the visible area */
    transform: translateY(100%);
    
    /* animation footer container */
    animation-name: footer;
    animation-duration: 0.5s;
    /* wait 2.5s to let navbar an main content to load */
    animation-delay: 2.5s;
    animation-timing-function: ease-out;
    /* to get the last part of the animation finishing in his original place */
    animation-fill-mode: forwards;
}

/* Imgs container */
.footer div{
    background: var(--blue);
    width: 130px;
    height: 50%;
    border-radius: 20px 20px 0 0 ;
    display: flex;
    justify-content: center;
}

@keyframes footer{
    0%{
        /* It starts from outside the visible area */
        transform: translateY(100%);
    }

    100%{
        /* finish in his original place */
        transform: translateY(0px);
    }
}

.footer div img{
    width: 160px;
    /* in order to get the function of the bottom */
    position: absolute;
    bottom: 30px;

    /*Smooth transition when it gets back to its original place after animation */
    transform: translateY(0px), scale(1);
    transition: transform 0.5s ease-in-out;

    justify-content: center;
    
}

.footer div:hover img{
    cursor: pointer;
    /* when it's negative, the element goes upwards */
    transform: translateY(-20px) scale(1.3);
    transition: transform 0.5s ease-in-out;
}

















.loader{
    background: white;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    /* positioning in order */
    z-index: 3;
                        /* linear aceleration */
    animation: loader 1.4s linear forwards;
                                /*To stay in your final state  */
}

/* Animation for each element of loader's section */
.loader div {
    background: lightblue;
    width: 40px;
    height: 40px;
    /* make circles */
    border-radius: 50%;
    margin: 10px;

    transform: scale(0);
    animation: scaling 2s ease-in-out infinite;
}

/* Delay in each container  */
.loader div:nth-child(1){
    animation-delay: 0.2s;
}
.loader div:nth-child(2){
    animation-delay: 0.4s;
}
.loader div:nth-child(3){
    animation-delay: 0.6s;
}

@keyframes loader {
    /* Progression under the 2s  predifined: */
    0%{
        opacity: 1;
        visibility: visible;
    }
    97%{
      opacity: 1;
      visibility: visible; 
    }
    100%{
        opacity: 0;
        /* To get interaction for the other layer */
        visibility: hidden;
    }



}

@keyframes scaling {
    0%,100%{
                    /* To get the circles tiny  */
        transform: scale(0.2);
    }
    50%{
        transform: scale(1);
    }
    65%{
        transform: scale(1);
    }
    
}



.modal{
    width: 100%;
    height: 100%;
    background: rgb(0, 0, 0, 0.5);
    position: absolute;
    z-index: 4;

    display: grid;
    place-items: center;
}

.hidden{
    /* display grid wins because of the specificity orders, so important is implemented */
    display: none !important; 
}

.visible{
    display: grid   !important;
}


.modal__content{
    background: white;
    width: 50%;
    height: 50%;

    display: grid;
    place-items: center;

    position: relative;  /*positioning context for the childs*/
}

.modal__content--close{
    position: absolute;
    top: 0;
    left: 0;
    cursor: pointer;
}

#radio-1,#radio-2,#radio-3{
    display: none;
}

.modal__content--slider{
    /* rectangular shape */
    width: 350px;
    height: 260px;

    /* to get to see the cards beside one another in 3d animation*/
    transform-style: preserve-3d;
}


.cards{
    position: relative;   /* To control child positioning */
    width: 100%;
    height: 100%;

    
}

/* Style for each card */
.card{
    background: var(--yellow);
    position: absolute;
    /* Center */
    left: 0;
    right: 0;
    margin: 0 auto;
        /* transform elements, 0.4s duration, acceleration ease  */
    transition: transform 0.4s ease;
    cursor: pointer;
    /* Center the content inside of card container */
    display: grid;
    place-items: center;

    height: 100%;
    width: 50%;
}

.card img{
max-width: 100%; /* Make the image as wide as its container */
  max-height: 100%; /* Make the image as tall as its container */
  width: auto; /* Automatically adjust the image width */
  height: auto;
}

#radio-1:checked ~ .cards #card-1,
#radio-2:checked ~ .cards #card-2,
#radio-3:checked ~ .cards #card-3{
    transform: translateX(0) scale(1);
    opacity: 1;
    z-index: 1;
}

#radio-1:checked ~ .cards #card-2,
#radio-2:checked ~ .cards #card-3,
#radio-3:checked ~ .cards #card-1{
    transform: translateX(40%) scale(0.8);
    opacity: 0.5;
    z-index: 0;
}


#radio-1:checked ~ .cards #card-3,
#radio-2:checked ~ .cards #card-1,
#radio-3:checked ~ .cards #card-2{
    transform: translateX(-40%) scale(0.8);
    opacity: 0.5;
    z-index: 0;
}




